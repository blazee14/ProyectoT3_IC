{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryan\\\\Downloads\\\\project\\\\project\\\\src\\\\components\\\\Patient\\\\ReservarCita.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReservarCita() {\n  _s();\n  const [fecha, setFecha] = useState('');\n  const [idMedico, setIdMedico] = useState('');\n  const [motivo, setMotivo] = useState('');\n  const idPaciente = 1;\n  const idClinica = 1;\n  const estado = 'A';\n  const numero = Math.floor(Math.random() * 9000) + 1000;\n  const enviarCita = async () => {\n    if (!fecha || !idMedico || !motivo) {\n      alert('Por favor complete todos los campos.');\n      return;\n    }\n    const datos = {\n      idPaciente,\n      idMedico: parseInt(idMedico),\n      idClinica,\n      fecha,\n      estado,\n      numero\n    };\n    try {\n      const res = await fetch('http://localhost:5000/api/citas', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(datos)\n      });\n      const resultado = await res.json();\n      if (res.ok) {\n        alert('✅ ' + resultado.mensaje);\n        setFecha('');\n        setIdMedico('');\n        setMotivo('');\n      } else {\n        alert('❌ Error: ' + resultado.error);\n      }\n    } catch (error) {\n      console.error('Error al conectar:', error);\n      alert('❌ No se pudo conectar con el servidor.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white rounded shadow-md max-w-lg mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Reservar Nueva Cita\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Fecha de la cita\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: fecha,\n      onChange: e => setFecha(e.target.value),\n      className: \"w-full p-2 mb-3 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Seleccionar Doctor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: idMedico,\n      onChange: e => setIdMedico(e.target.value),\n      className: \"w-full p-2 mb-3 border rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Seleccione un doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: \"Dr. Rodr\\xEDguez\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2\",\n        children: \"Dra. G\\xF3mez\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Motivo de la consulta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: motivo,\n      onChange: e => setMotivo(e.target.value),\n      className: \"w-full p-2 mb-3 border rounded\",\n      placeholder: \"Describa brevemente el motivo de su consulta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: enviarCita,\n      className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\",\n      children: \"Reservar Cita\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(ReservarCita, \"a2nM6eGAA1wxFWX/yIff133rl2g=\");\n_c = ReservarCita;\nexport default ReservarCita;\nvar _c;\n$RefreshReg$(_c, \"ReservarCita\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ReservarCita","_s","fecha","setFecha","idMedico","setIdMedico","motivo","setMotivo","idPaciente","idClinica","estado","numero","Math","floor","random","enviarCita","alert","datos","parseInt","res","fetch","method","headers","body","JSON","stringify","resultado","json","ok","mensaje","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bryan/Downloads/project/project/src/components/Patient/ReservarCita.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction ReservarCita() {\r\n  const [fecha, setFecha] = useState('');\r\n  const [idMedico, setIdMedico] = useState('');\r\n  const [motivo, setMotivo] = useState('');\r\n\r\n  const idPaciente = 1;\r\n  const idClinica = 1;\r\n  const estado = 'A';\r\n  const numero = Math.floor(Math.random() * 9000) + 1000;\r\n\r\n  const enviarCita = async () => {\r\n    if (!fecha || !idMedico || !motivo) {\r\n      alert('Por favor complete todos los campos.');\r\n      return;\r\n    }\r\n\r\n    const datos = {\r\n      idPaciente,\r\n      idMedico: parseInt(idMedico),\r\n      idClinica,\r\n      fecha,\r\n      estado,\r\n      numero\r\n    };\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/citas', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(datos)\r\n      });\r\n\r\n      const resultado = await res.json();\r\n      if (res.ok) {\r\n        alert('✅ ' + resultado.mensaje);\r\n        setFecha('');\r\n        setIdMedico('');\r\n        setMotivo('');\r\n      } else {\r\n        alert('❌ Error: ' + resultado.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al conectar:', error);\r\n      alert('❌ No se pudo conectar con el servidor.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 bg-white rounded shadow-md max-w-lg mx-auto\">\r\n      <h2 className=\"text-xl font-bold mb-4\">Reservar Nueva Cita</h2>\r\n\r\n      <label>Fecha de la cita</label>\r\n      <input\r\n        type=\"date\"\r\n        value={fecha}\r\n        onChange={(e) => setFecha(e.target.value)}\r\n        className=\"w-full p-2 mb-3 border rounded\"\r\n      />\r\n\r\n      <label>Seleccionar Doctor</label>\r\n      <select\r\n        value={idMedico}\r\n        onChange={(e) => setIdMedico(e.target.value)}\r\n        className=\"w-full p-2 mb-3 border rounded\"\r\n      >\r\n        <option value=\"\">Seleccione un doctor</option>\r\n        <option value=\"1\">Dr. Rodríguez</option>\r\n        <option value=\"2\">Dra. Gómez</option>\r\n      </select>\r\n\r\n      <label>Motivo de la consulta</label>\r\n      <textarea\r\n        value={motivo}\r\n        onChange={(e) => setMotivo(e.target.value)}\r\n        className=\"w-full p-2 mb-3 border rounded\"\r\n        placeholder=\"Describa brevemente el motivo de su consulta\"\r\n      />\r\n\r\n      <button\r\n        onClick={enviarCita}\r\n        className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n      >\r\n        Reservar Cita\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReservarCita;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
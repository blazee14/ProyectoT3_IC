{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryan\\\\Downloads\\\\project\\\\project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport LoginForm from './components/Auth/LoginForm';\nimport PatientLogin from './components/Auth/PatientLogin';\nimport RegisterPaciente from './components/Auth/RegisterPaciente';\nimport Navbar from './components/Layout/Navbar';\nimport DoctorDashboard from './components/Doctor/Dashboard';\nimport AdminDashboard from './components/Admin/Dashboard';\nimport PatientDashboard from './components/Patient/Dashboard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [userType, setUserType] = useState(null);\n  const [isPatient, setIsPatient] = useState(false);\n  const [patientData, setPatientData] = useState(null);\n  useEffect(() => {\n    const storedUserType = localStorage.getItem('userType');\n    if (storedUserType) {\n      setUserType(storedUserType);\n    }\n    const storedPaciente = localStorage.getItem('paciente');\n    if (storedPaciente) {\n      setPatientData(JSON.parse(storedPaciente));\n      setIsPatient(true);\n    }\n  }, []);\n  const handlePatientLogin = data => {\n    setPatientData(data);\n    setIsPatient(true);\n    localStorage.setItem('paciente', JSON.stringify(data));\n  };\n  const handlePatientLogout = () => {\n    setIsPatient(false);\n    setPatientData(null);\n    localStorage.removeItem('paciente');\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center min-h-screen\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col md:flex-row gap-8 p-4\",\n              children: [/*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(PatientLogin, {\n                onLogin: handlePatientLogin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/registro\",\n          element: /*#__PURE__*/_jsxDEV(RegisterPaciente, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          element: isPatient ? /*#__PURE__*/_jsxDEV(PatientDashboard, {\n            patientData: patientData,\n            onLogout: handlePatientLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin\",\n          element: userType === 'admin' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/doctor\",\n          element: userType === 'doctor' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(DoctorDashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"3Tb9kgYPFDctXoLsknb3VJLuQx8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","LoginForm","PatientLogin","RegisterPaciente","Navbar","DoctorDashboard","AdminDashboard","PatientDashboard","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","userType","setUserType","isPatient","setIsPatient","patientData","setPatientData","storedUserType","localStorage","getItem","storedPaciente","JSON","parse","handlePatientLogin","data","setItem","stringify","handlePatientLogout","removeItem","children","className","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onLogout","to","_c","$RefreshReg$"],"sources":["C:/Users/bryan/Downloads/project/project/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n\nimport LoginForm from './components/Auth/LoginForm';\nimport PatientLogin from './components/Auth/PatientLogin';\nimport RegisterPaciente from './components/Auth/RegisterPaciente';\nimport Navbar from './components/Layout/Navbar';\nimport DoctorDashboard from './components/Doctor/Dashboard';\nimport AdminDashboard from './components/Admin/Dashboard';\nimport PatientDashboard from './components/Patient/Dashboard';\n\nconst App = () => {\n  const [userType, setUserType] = useState(null);\n  const [isPatient, setIsPatient] = useState(false);\n  const [patientData, setPatientData] = useState(null);\n\n  useEffect(() => {\n    const storedUserType = localStorage.getItem('userType');\n    if (storedUserType) {\n      setUserType(storedUserType);\n    }\n\n    const storedPaciente = localStorage.getItem('paciente');\n    if (storedPaciente) {\n      setPatientData(JSON.parse(storedPaciente));\n      setIsPatient(true);\n    }\n  }, []);\n\n  const handlePatientLogin = (data) => {\n  setPatientData(data);\n  setIsPatient(true);\n  localStorage.setItem('paciente', JSON.stringify(data));\n};\n\n\n  const handlePatientLogout = () => {\n    setIsPatient(false);\n    setPatientData(null);\n    localStorage.removeItem('paciente');\n  };\n\n  return (\n    <Router>\n      <div className=\"min-h-screen bg-gray-100\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <div className=\"flex items-center justify-center min-h-screen\">\n                <div className=\"flex flex-col md:flex-row gap-8 p-4\">\n                  <LoginForm />\n                  <PatientLogin onLogin={handlePatientLogin} />\n                </div>\n              </div>\n            }\n          />\n          <Route path=\"/registro\" element={<RegisterPaciente />} />\n          <Route\n            path=\"/dashboard\"\n            element={\n              isPatient ? (\n                <PatientDashboard patientData={patientData} onLogout={handlePatientLogout} />\n              ) : (\n                <Navigate to=\"/\" />\n              )\n            }\n          />\n          <Route\n            path=\"/admin\"\n            element={\n              userType === 'admin' ? (\n                <>\n                  <Navbar />\n                  <AdminDashboard />\n                </>\n              ) : (\n                <Navigate to=\"/\" />\n              )\n            }\n          />\n          <Route\n            path=\"/doctor\"\n            element={\n              userType === 'doctor' ? (\n                <>\n                  <Navbar />\n                  <DoctorDashboard />\n                </>\n              ) : (\n                <Navigate to=\"/\" />\n              )\n            }\n          />\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import{useState,useEffect}from'react';import LoginForm from'./components/Auth/LoginForm';import PatientLogin from'./components/Auth/PatientLogin';import Navbar from'./components/Layout/Navbar';import DoctorDashboard from'./components/Doctor/Dashboard';import AdminDashboard from'./components/Admin/Dashboard';import PatientDashboard from'./components/Patient/Dashboard';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[userType,setUserType]=useState(null);const[isPatient,setIsPatient]=useState(false);const[patientData,setPatientData]=useState(null);useEffect(()=>{const storedUserType=localStorage.getItem('userType');if(storedUserType){setUserType(storedUserType);}},[]);const handlePatientLogin=credentials=>{// Simulación de autenticación\nsetPatientData({id:1,name:'Juan Pérez',username:credentials.username});setIsPatient(true);};const handlePatientLogout=()=>{setIsPatient(false);setPatientData(null);};if(isPatient){return/*#__PURE__*/_jsx(PatientDashboard,{patientData:patientData,onLogout:handlePatientLogout});}return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-100\",children:userType?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),userType==='doctor'?/*#__PURE__*/_jsx(DoctorDashboard,{}):/*#__PURE__*/_jsx(AdminDashboard,{})]}):/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center min-h-screen\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col md:flex-row gap-8 p-4\",children:[/*#__PURE__*/_jsx(LoginForm,{}),/*#__PURE__*/_jsx(PatientLogin,{onLogin:handlePatientLogin})]})})});};export default App;// DONE","map":{"version":3,"names":["useState","useEffect","LoginForm","PatientLogin","Navbar","DoctorDashboard","AdminDashboard","PatientDashboard","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","userType","setUserType","isPatient","setIsPatient","patientData","setPatientData","storedUserType","localStorage","getItem","handlePatientLogin","credentials","id","name","username","handlePatientLogout","onLogout","className","children","onLogin"],"sources":["C:/Users/upn_i/OneDrive/Escritorio/project/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport LoginForm from './components/Auth/LoginForm';\nimport PatientLogin from './components/Auth/PatientLogin';\nimport Navbar from './components/Layout/Navbar';\nimport DoctorDashboard from './components/Doctor/Dashboard';\nimport AdminDashboard from './components/Admin/Dashboard';\nimport PatientDashboard from './components/Patient/Dashboard';\n\nconst App = () => {\n  const [userType, setUserType] = useState(null);\n  const [isPatient, setIsPatient] = useState(false);\n  const [patientData, setPatientData] = useState(null);\n\n  useEffect(() => {\n    const storedUserType = localStorage.getItem('userType');\n    if (storedUserType) {\n      setUserType(storedUserType);\n    }\n  }, []);\n\n  const handlePatientLogin = (credentials) => {\n    // Simulación de autenticación\n    setPatientData({\n      id: 1,\n      name: 'Juan Pérez',\n      username: credentials.username\n    });\n    setIsPatient(true);\n  };\n\n  const handlePatientLogout = () => {\n    setIsPatient(false);\n    setPatientData(null);\n  };\n\n  if (isPatient) {\n    return <PatientDashboard patientData={patientData} onLogout={handlePatientLogout} />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      {userType ? (\n        <>\n          <Navbar />\n          {userType === 'doctor' ? <DoctorDashboard /> : <AdminDashboard />}\n        </>\n      ) : (\n        <div className=\"flex items-center justify-center min-h-screen\">\n          <div className=\"flex flex-col md:flex-row gap-8 p-4\">\n            <LoginForm />\n            <PatientLogin onLogin={handlePatientLogin} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n// DONE"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,SAAS,KAAM,6BAA6B,CACnD,MAAO,CAAAC,YAAY,KAAM,gCAAgC,CACzD,MAAO,CAAAC,MAAM,KAAM,4BAA4B,CAC/C,MAAO,CAAAC,eAAe,KAAM,+BAA+B,CAC3D,MAAO,CAAAC,cAAc,KAAM,8BAA8B,CACzD,MAAO,CAAAC,gBAAgB,KAAM,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9D,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACiB,SAAS,CAAEC,YAAY,CAAC,CAAGlB,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACmB,WAAW,CAAEC,cAAc,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CAEpDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAoB,cAAc,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CACvD,GAAIF,cAAc,CAAE,CAClBL,WAAW,CAACK,cAAc,CAAC,CAC7B,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,kBAAkB,CAAIC,WAAW,EAAK,CAC1C;AACAL,cAAc,CAAC,CACbM,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,YAAY,CAClBC,QAAQ,CAAEH,WAAW,CAACG,QACxB,CAAC,CAAC,CACFV,YAAY,CAAC,IAAI,CAAC,CACpB,CAAC,CAED,KAAM,CAAAW,mBAAmB,CAAGA,CAAA,GAAM,CAChCX,YAAY,CAAC,KAAK,CAAC,CACnBE,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,CAED,GAAIH,SAAS,CAAE,CACb,mBAAOR,IAAA,CAACF,gBAAgB,EAACY,WAAW,CAAEA,WAAY,CAACW,QAAQ,CAAED,mBAAoB,CAAE,CAAC,CACtF,CAEA,mBACEpB,IAAA,QAAKsB,SAAS,CAAC,0BAA0B,CAAAC,QAAA,CACtCjB,QAAQ,cACPF,KAAA,CAAAF,SAAA,EAAAqB,QAAA,eACEvB,IAAA,CAACL,MAAM,GAAE,CAAC,CACTW,QAAQ,GAAK,QAAQ,cAAGN,IAAA,CAACJ,eAAe,GAAE,CAAC,cAAGI,IAAA,CAACH,cAAc,GAAE,CAAC,EACjE,CAAC,cAEHG,IAAA,QAAKsB,SAAS,CAAC,+CAA+C,CAAAC,QAAA,cAC5DnB,KAAA,QAAKkB,SAAS,CAAC,qCAAqC,CAAAC,QAAA,eAClDvB,IAAA,CAACP,SAAS,GAAE,CAAC,cACbO,IAAA,CAACN,YAAY,EAAC8B,OAAO,CAAET,kBAAmB,CAAE,CAAC,EAC1C,CAAC,CACH,CACN,CACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAV,GAAG,CAElB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}